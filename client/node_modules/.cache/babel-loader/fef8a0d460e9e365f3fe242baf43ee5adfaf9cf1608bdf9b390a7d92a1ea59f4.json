{"ast":null,"code":"import { createActions, createAction } from 'redux-actions';\n\n// pour un action réalise un side-effect comme appeller API, il y a 3 actions:\n// envoyer une requete \n// quand avec success\n// quand erreur\n\nexport const getType = reduxAction => {\n  return reduxAction().type;\n};\n\n// quand on crée la méthode createActions dans redux/actions, chaque action est une fonction retourne une valeur est un objet\nexport const getPosts = createActions({\n  getPostsRequest: undefined,\n  getPostsSuccess: payload => payload,\n  getPostsFailure: err => err\n});\nexport const createPost = createActions({\n  createPostRequest: payload => payload,\n  createPostSuccess: payload => payload,\n  createPostFailure: err => err\n});\n\n// action pour show model quand on clique sur le bouton + pour creer new post\nexport const showModel = createAction('SHOW_CREATE_POST_MODEL');\nexport const hideModel = createAction('HIDE_CREATE_POST_MODEL');\n\n/*\r\n    getType(getPosts.getPostSuccess)\r\n    =>\r\n    {\r\n        type: 'getPostSuccess',\r\n        payload: {\r\n            name: 'Test'\r\n        }\r\n    }\r\n*/","map":{"version":3,"names":["createActions","createAction","getType","reduxAction","type","getPosts","getPostsRequest","undefined","getPostsSuccess","payload","getPostsFailure","err","createPost","createPostRequest","createPostSuccess","createPostFailure","showModel","hideModel"],"sources":["D:/WEB_PROJECT/client/src/redux/actions/index.js"],"sourcesContent":["import { createActions , createAction} from 'redux-actions';\r\n\r\n// pour un action réalise un side-effect comme appeller API, il y a 3 actions:\r\n// envoyer une requete \r\n// quand avec success\r\n// quand erreur\r\n\r\n\r\nexport const getType = (reduxAction) => {\r\n    return reduxAction().type;\r\n}\r\n\r\n\r\n// quand on crée la méthode createActions dans redux/actions, chaque action est une fonction retourne une valeur est un objet\r\nexport const getPosts = createActions({\r\n    getPostsRequest : undefined,\r\n    getPostsSuccess: (payload) => payload,\r\n    getPostsFailure: (err) => err,\r\n});\r\n\r\nexport const createPost = createActions({\r\n    createPostRequest : (payload) => payload,\r\n    createPostSuccess: (payload) => payload,\r\n    createPostFailure: (err) => err,\r\n});\r\n\r\n// action pour show model quand on clique sur le bouton + pour creer new post\r\nexport const showModel  = createAction('SHOW_CREATE_POST_MODEL');\r\nexport const hideModel  = createAction('HIDE_CREATE_POST_MODEL');\r\n\r\n\r\n\r\n/*\r\n    getType(getPosts.getPostSuccess)\r\n    =>\r\n    {\r\n        type: 'getPostSuccess',\r\n        payload: {\r\n            name: 'Test'\r\n        }\r\n    }\r\n*/"],"mappings":"AAAA,SAASA,aAAa,EAAGC,YAAY,QAAO,eAAe;;AAE3D;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,OAAO,GAAIC,WAAW,IAAK;EACpC,OAAOA,WAAW,CAAC,CAAC,CAACC,IAAI;AAC7B,CAAC;;AAGD;AACA,OAAO,MAAMC,QAAQ,GAAGL,aAAa,CAAC;EAClCM,eAAe,EAAGC,SAAS;EAC3BC,eAAe,EAAGC,OAAO,IAAKA,OAAO;EACrCC,eAAe,EAAGC,GAAG,IAAKA;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGZ,aAAa,CAAC;EACpCa,iBAAiB,EAAIJ,OAAO,IAAKA,OAAO;EACxCK,iBAAiB,EAAGL,OAAO,IAAKA,OAAO;EACvCM,iBAAiB,EAAGJ,GAAG,IAAKA;AAChC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,SAAS,GAAIf,YAAY,CAAC,wBAAwB,CAAC;AAChE,OAAO,MAAMgB,SAAS,GAAIhB,YAAY,CAAC,wBAAwB,CAAC;;AAIhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}