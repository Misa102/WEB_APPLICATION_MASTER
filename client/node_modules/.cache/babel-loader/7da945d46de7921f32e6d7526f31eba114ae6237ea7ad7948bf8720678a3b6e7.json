{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB_PROJECT\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './redux/reducers';\nimport mySaga from './redux/sagas';\n\n// Créer le middleware Saga\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sagaMiddleware = createSagaMiddleware();\n\n// Créer le store avec le middleware Saga\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\n//sagaMiddleware.arguments(mySaga);\n// Exécuter saga avec le middleware\nsagaMiddleware.run(mySaga);\n\n// Render le composant racine APP avec le Redux Provider\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","App","Provider","createStore","applyMiddleware","createSagaMiddleware","reducers","mySaga","jsxDEV","_jsxDEV","sagaMiddleware","store","run","render","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["D:/WEB_PROJECT/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './redux/reducers';\nimport mySaga from './redux/sagas';\n\n// Créer le middleware Saga\nconst sagaMiddleware = createSagaMiddleware();\n\n// Créer le store avec le middleware Saga\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\n//sagaMiddleware.arguments(mySaga);\n// Exécuter saga avec le middleware\nsagaMiddleware.run(mySaga);\n\n\n// Render le composant racine APP avec le Redux Provider\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAAQC,WAAW,EAAEC,eAAe,QAAO,OAAO;AAClD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,MAAM,MAAM,eAAe;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGL,oBAAoB,CAAC,CAAC;;AAE7C;AACA,MAAMM,KAAK,GAAGR,WAAW,CAACG,QAAQ,EAAEF,eAAe,CAACM,cAAc,CAAC,CAAC;;AAEpE;AACA;AACAA,cAAc,CAACE,GAAG,CAACL,MAAM,CAAC;;AAG1B;AACAP,QAAQ,CAACa,MAAM,eACbJ,OAAA,CAACP,QAAQ;EAACS,KAAK,EAAEA,KAAM;EAAAG,QAAA,eACrBL,OAAA,CAACR,GAAG;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CAAC,EACXC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}